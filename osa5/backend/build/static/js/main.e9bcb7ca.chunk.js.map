{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","axios","get","then","response","data","newToken","login","credentials","a","post","App","useState","blogs","setBlogs","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","token","logoutUser","removeItem","handleLogin","event","preventDefault","console","log","loginService","setItem","stringify","setTimeout","onSubmit","type","value","name","onChange","target","userJSON","showUser","onClick","blogForm","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"2OAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACe,6BADf,OACyBD,EAAKE,S,gBCyBjB,EAnBA,WAEb,OADgBC,IAAMC,IATR,cAUCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAvBE,SAACC,GACZ,iBAAaA,ICEJ,GAAEC,MALN,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACUR,IAAMS,KAHd,aAG4BF,GAD9B,cACPJ,EADO,yBAENA,EAASC,MAFH,2CAAH,uDCwHIM,EAtHH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,gCAGuBA,mBAAS,OAHhC,mBAGIG,GAHJ,aAIeH,mBAAS,IAJxB,mBAIVI,EAJU,KAIAC,EAJA,OAKeL,mBAAS,IALxB,mBAKVM,EALU,KAKAC,EALA,OAMOP,mBAAS,MANhB,mBAMVQ,EANU,KAMJC,EANI,KAQhBC,qBAAU,WACRC,IAAqBpB,MAAK,SAAAU,GAAK,OAC7BC,EAAUD,QAEZ,IAEHS,qBAAU,WACT,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,iBACnD,GAAIH,EAAgB,CACnB,IAAMJ,EAAOQ,KAAKC,MAAML,GACxBH,EAAQD,GACRG,EAAqBH,EAAKU,UAEzB,IAEH,IAAMC,EAAa,WAClBN,OAAOC,aAAaM,WAAW,iBAC/BX,EAAQ,MACRJ,EAAY,IACZE,EAAY,KAwDPc,EAAW,uCAAG,WAAOC,GAAP,eAAAzB,EAAA,6DACnByB,EAAMC,iBACNC,QAAQC,IAAI,eAAgBrB,EAAUE,GAFnB,kBAIAoB,EAAa/B,MAAM,CACrCS,WAAUE,aALQ,OAIbE,EAJa,OAOnBK,OAAOC,aAAaa,QACnB,gBAAiBX,KAAKY,UAAUpB,IAEjCG,EAAqBH,EAAKU,OAC1BT,EAAQD,GACRH,EAAY,IACZE,EAAY,IAbO,kDAenBJ,EAAgB,qBAChB0B,YAAW,WACV1B,EAAgB,QACd,KAlBgB,0DAAH,sDAsBhB,OACE,6BACD,kDACU,OAATK,GA5EF,0BAAMsB,SAAUT,GACf,wCAEC,2BACAU,KAAK,OACLC,MAAO5B,EACP6B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAe9B,EAAY8B,EAAOH,WAG7C,wCAEC,2BACAD,KAAK,WACLC,MAAO1B,EACP2B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB5B,EAAY4B,EAAOH,WAG9C,4BAAQD,KAAK,UAAb,UA0DU,OAATvB,GArDc,WAChB,IAAM4B,EAAWvB,OAAOC,aAAaC,QAAQ,iBAC7C,IAAKqB,EACJ,OACC,4CAKF,IAAMC,EAAWrB,KAAKC,MAAMmB,GAC5B,OACC,6BACEC,EAASJ,KADX,cAC2B,6BAC1B,4BAAQF,KAAK,SAASO,QAASnB,GAA/B,WAwCiBoB,GACf,qCACCtC,EAAMuC,KAAI,SAAAtD,GAAI,OACb,kBAAC,EAAD,CAAMuD,IAAKvD,EAAKwD,GAAIxD,KAAMA,SCjHlCyD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e9bcb7ca.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} <br/> by {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n\ttoken = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObj) => {\n\tconst config = {\n\t\theaders: { Authorization: token }\n\t}\n\n\tconst response = await axios.post(baseUrl, newObj, config)\n\treturn response.data\n}\n\nconst update = (id, newObj) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObj)\n\treturn request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n\tconst [blogs, setBlogs] = useState([])\n\tconst [newBlog, setNewBlog] = useState('')\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\tconst [username, setUsername] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedBlogger')\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tsetUser(user)\n\t\t\tblogService.setToken(user.token)\n\t\t}\n\t}, [])\n\n\tconst logoutUser = () => {\n\t\twindow.localStorage.removeItem('loggedBlogger')\n\t\tsetUser(null)\n\t\tsetUsername('')\n\t\tsetPassword('')\n\t}\n\n\tconst loginForm = () => {\n\t\treturn (\n\t\t<form onSubmit={handleLogin}>\n\t\t\t<div>\n\t\t\t\tusername\n\t\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={username}\n\t\t\t\tname=\"Username\"\n\t\t\t\tonChange={({ target}) => setUsername(target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tpassword\n\t\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tvalue={password}\n\t\t\t\tname=\"Password\"\n\t\t\t\tonChange={({ target }) => setPassword(target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button type=\"submit\">login</button>\n\t\t</form>\n\t\t)\n\t}\n\n\tconst blogForm = () => {\n\t\tconst userJSON = window.localStorage.getItem('loggedBlogger')\n\t\tif (!userJSON) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\tlolxd KEIJO\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\tconst showUser = JSON.parse(userJSON)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{showUser.name} logged in <br/>\n\t\t\t\t<button type=\"submit\" onClick={logoutUser}>logout</button>\n\t\t\t</div>\n\t\t)\n\t\t\t\n\t\t/*<form onSubmit={addBlog}>\n\t\t\t\t<input\n\t\t\t\tvalue={newBlog}\n\t\t\t\tonChange={handleBlogChange}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t</form>*/\n\t\t}\n\t\t\n\t\n\tconst handleLogin = async (event) => {\n\t\tevent.preventDefault()\n\t\tconsole.log('logging with', username, password)\n\ttry {\n\t\tconst user = await loginService.login({\n\t\t\tusername, password\n\t\t})\n\t\twindow.localStorage.setItem(\n\t\t\t'loggedBlogger', JSON.stringify(user)\n\t\t)\n\t\tblogService.setToken(user.token)\n\t\tsetUser(user)\n\t\tsetUsername('')\n\t\tsetPassword('')\n\t} catch (exception) {\n\t\tsetErrorMessage('wrong credentials')\n\t\tsetTimeout(() => {\n\t\t\tsetErrorMessage(null)\n\t\t}, 5000)\n\t}\n}\n\n  return (\n    <div>\n\t\t\t<h1>Keijon pislablogit</h1>\n\t\t\t{user === null && loginForm(username, setUsername, password, setPassword, handleLogin)}\n\t\t\t{user !== null && blogForm()}\n      <h2>blogs</h2>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}